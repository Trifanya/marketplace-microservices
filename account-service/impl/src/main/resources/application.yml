server:
  port: 0 # указывается 0, чтобы при регистрации сервиса eureka-server порт был определен автоматически
  #port: 8080
feign:
  user-service:
    uri: http://localhost:8765/user-service/users
    username: user-service-user
    password: '{noop}password'
  catalog-service:
    uri: http://localhost:8765/catalog-service
    username: catalog-service-user
    password: '{noop}password'
  feedback-service:
    uri: http://localhost:8765/feedback-service/feedback
    username: feedback-service-user
    password: '{noop}password'
  order-service:
    uri: http://localhost:8765/order-service/orders
    username: order-service-user
    password: '{noop}password'
spring:
  application:
    name: account-service # id приложения - желательно указывать всегда в микросервисных приложениях
    kafka:
      topic:
        favorites: new-favorite-topic
        reviews: new-review-topic
        orders: new-order-topic
      consumer:
        groups:
          favorites: favorites-consumer-group
          cart: cart-consumer-group
          orders: orders-consumer-group
          reviews: reviews-consumer-group
        json-deserializer:
          trusted-packages:
            catalog-service: dev.trifonov.catalog_service.kafka.message
            order-service: dev.trifonov.order_service.kafka.message
            review-service: dev.trifonov.review_service.kafka.message
            user-service: dev.trifonov.user_service.kafka.message
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/marketplace
      client:
        provider: # поставщик oauth - место, где мы авторизуемся
          keycloak:
            issuer-uri: http://localhost:8080/realms/marketplace
            #user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: account-service
            client-secret: AZ7vtxxOTdwebHfBy1S0kUnkeB0FSYYt
            scope:
              - openid
              - get_catalog
              - edit_catalog
              - microprofile-jwt
          discovery:
            provider: keycloak
            client-id: account-service
            client-secret: AZ7vtxxOTdwebHfBy1S0kUnkeB0FSYYt
            authorization-grant-type: client_credentials
            scope:
              - discovery
  cloud:
    openfeign:
      oauth2:
        enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/marketplace-account-db
    username: postgres
    password: My_passw0rd
  flyway:
    enabled: true # по умолчанию
    locations: classpath:db/migration # по умолчанию
    baseline-on-migrate: true
  kafka:
    bootstrap-servers: localhost:9092
  jpa:
    show-sql: true
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka # url, куда будет происходить регистрация микросервисов
  instance:
    instance-id: ${spring.application.name}:${random.uuid} # чтобы каждый экземпляр микросервиса имел уникальный id
    prefer-ip-address: false
logging:
  pattern:
    console: "%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n" # формат логов
  level:
    sql: INFO
    org.springframework.kafka.*: OFF
    org.springframework.kafka.listener.[KafkaMessageListenerContainer$ListenerConsumer]: OFF
    org.apache.kafka.*: OFF
    kafka.*: OFF
    org.apache.zookeeper.*: OFF
    dev.trifonov.account_service.feign.CatalogFeignClient: DEBUG


